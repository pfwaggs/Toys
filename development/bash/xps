
declare -A Breve
declare tli=~/.tli

function _Breve () { #AzA
    case $1 in
	s) for x in ${!Breve[@]}; do
		echo $x ${Breve[$x]}
	    done | sort | tee $tli
	    ;;
	l) exec 4<$tli
	    while read -u 4 a b; do
		Breve[$a]="$b"
	    done
	    exec 4<&-
	    ;;
	c) Breve=() ;;
	a) Breve[$2]="$3" ;;
    esac
} #ZaZ

_Breve l

function _FindDate () { #AzA
    case ${#1} in
	6) echo ${1:0:4}-${1:4} ;;
	8) echo ${1:0:4}-${1:4:2}-${1:6} ;;
	0|1) date +%F ;;
	*) echo $1 ;;
    esac
} #ZaZ

function _FindPath () { #AzA
    declare a b x
    # if completion then want $2 else $1
    x=${2:-$1}
    read a b <<< ${x/,/ }
#   echo a=$a >&2
#   echo b=$b >&2
    if [[ ${Breve[$a]} ]]; then
	if [[ $b ]]; then
	    declare d=$(_FindDate $b)
#	    echo d=$d >&2
	    declare -a list
	    for x in "$(compgen -d ${Breve[$a]}/$d)"; do
		[[ $x ]] || continue
		list+=("$x")
	    done
	    printf -v x "%02d" $(( 1 + ${#list[@]} ))
	    list+=("${Breve[$a]}/$d.$x")
	    for x in "${list[@]}"; do echo "$x"; done
	else
	    [[ -d $a ]] && echo "$a" || echo "${Breve[$a]}"
	fi
    fi
} #ZaZ

complete -C '_FindPath' stk
